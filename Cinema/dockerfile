FROM ubuntu:22.04

# Pour éviter les interactions lors de l'installation des paquets
ARG DEBIAN_FRONTEND=noninteractive

WORKDIR /var/www/html

# Mettre à jour les sources et installer les dépendances de base
RUN apt-get update && apt-get install -y \
    software-properties-common \
    curl \
    gnupg \
    unzip \
    zip \
    git \
    ca-certificates \
    lsb-release \
    && apt-get clean

# Ajouter le dépôt de PHP 8.2
RUN add-apt-repository ppa:ondrej/php -y && apt-get update

# Installer PHP 8.2 et ses extensions
RUN apt-get install -y \
    php8.2 \
    php8.2-cli \
    php8.2-common \
    php8.2-curl \
    php8.2-mysql \
    php8.2-pgsql \
    php8.2-sqlite3 \
    php8.2-mbstring \
    php8.2-xml \
    php8.2-bcmath \
    php8.2-zip \
    php8.2-gd \
    php8.2-intl \
    php8.2-readline \
    php8.2-soap \
    php8.2-imap \
    php8.2-opcache \
    php8.2-tokenizer \
    php8.2-dev \
    php-pear \
    php8.2-memcached \
    php8.2-redis \
    supervisor \
    && apt-get clean

# Installer Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Copier les fichiers du projet dans le conteneur
COPY . /var/www/html

# Installer les dépendances Laravel avec Composer
RUN composer install --no-dev --optimize-autoloader --prefer-dist

# Générer le fichier .env et la clé d'application
RUN cp .env.example .env && php artisan key:generate

# Mettre en cache la config, les routes et les vues pour optimiser les performances
RUN php artisan config:cache \
    && php artisan route:cache \
    && php artisan view:cache

# Exposer le port 8000 pour que l'application soit accessible
EXPOSE 8000

# Lancer le serveur Laravel
CMD ["php", "artisan", "serve", "--host=0.0.0.0", "--port=8000"]